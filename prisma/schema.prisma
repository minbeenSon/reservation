generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id              Int           @id @default(autoincrement())
  email           String?       @db.VarChar(45)
  password        String?       @db.Text
  nickname        String?       @db.Text
  profile_img_url String?       @db.Text
  gender          String?       @db.VarChar(45)
  birth           String?       @db.TinyText
  country         String?       @db.VarChar(45)
  user_rank       UserRank?
  created_at      DateTime?     @db.DateTime(0)
  deleted_at      DateTime?     @db.DateTime(0)
  login_token     login_token[]
}

model login_token {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  token      String?   @db.TinyText
  created_at DateTime? @db.DateTime(0)
  expired_at DateTime? @db.DateTime(0)
  user       user?     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "login_token_user")

  @@index([user_id], map: "login_token_user_idx")
}

model board {
  id                Int       @id @default(autoincrement())
  title             String?   @db.TinyText
  content_text      String?   @db.Text
  content_image_url String?   @db.TinyText
  view_count        Int?
  user_id           Int?
  created_at        DateTime? @db.DateTime(0)
  deleted_at        DateTime? @db.DateTime(0)
}

model board_like {
  id       Int  @id @default(autoincrement())
  board_id Int?
  user_id  Int?
}

model board_comment {
  id         Int       @id @default(autoincrement())
  comment_id Int?
  board_id   Int?
  content    String?
  user_id    Int?
  created_at DateTime? @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)
}

enum UserRank {
  USER
  MANAGER
}
